{"buildConfigurations":[{"baseConfigurationFileReference":"e111a5d8cf296bcd5e88d00de673c542308c6117de2bc430ec260e1448bdbffe","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS":"NO","CLANG_ENABLE_MODULES":"YES","CODE_SIGN_ENTITLEMENTS":"Sauced/Sauced.entitlements","CODE_SIGN_IDENTITY[sdk=iphoneos*]":"iPhone Distribution","CODE_SIGN_STYLE":"Manual","CURRENT_PROJECT_VERSION":"1","DEVELOPMENT_TEAM":"","DEVELOPMENT_TEAM[sdk=iphoneos*]":"9FQ9U3MU6U","ENABLE_BITCODE":"NO","INFOPLIST_FILE":"Sauced/Info.plist","INFOPLIST_KEY_CFBundleDisplayName":"Sauced","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","MARKETING_VERSION":"1.0","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"org.hotsauce.com","PRODUCT_NAME":"Sauced","PROVISIONING_PROFILE_SPECIFIER":"","PROVISIONING_PROFILE_SPECIFIER[sdk=iphoneos*]":"hot sauce","SWIFT_OPTIMIZATION_LEVEL":"-Onone","SWIFT_VERSION":"5.0","VERSIONING_SYSTEM":"apple-generic"},"guid":"e111a5d8cf296bcd5e88d00de673c5424f4285df77029c7e9488e337d2300446","name":"Debug"},{"baseConfigurationFileReference":"e111a5d8cf296bcd5e88d00de673c542432f324b26da0fa90fddb44be59115e4","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","ASSETCATALOG_COMPILER_APPICON_NAME[sdk=iphoneos*]":"AppIcon","ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS":"NO","CLANG_ENABLE_MODULES":"YES","CODE_SIGN_ENTITLEMENTS":"Sauced/Sauced.entitlements","CODE_SIGN_IDENTITY[sdk=iphoneos*]":"iPhone Distribution","CODE_SIGN_STYLE":"Manual","CURRENT_PROJECT_VERSION":"1","DEVELOPMENT_TEAM":"","DEVELOPMENT_TEAM[sdk=iphoneos*]":"9FQ9U3MU6U","INFOPLIST_FILE":"Sauced/Info.plist","INFOPLIST_KEY_CFBundleDisplayName":"Sauced","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","MARKETING_VERSION":"1.0","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"org.hotsauce.com","PRODUCT_NAME":"Sauced","PROVISIONING_PROFILE_SPECIFIER":"","PROVISIONING_PROFILE_SPECIFIER[sdk=iphoneos*]":"hot sauce","SWIFT_VERSION":"5.0","VERSIONING_SYSTEM":"apple-generic"},"guid":"e111a5d8cf296bcd5e88d00de673c5426515d5e59d9b359982bb12691657424e","name":"Release"}],"buildPhases":[{"alwaysOutOfDate":"false","alwaysRunForInstallHdrs":"false","buildFiles":[],"emitEnvironment":"false","guid":"e111a5d8cf296bcd5e88d00de673c542eb8f5e104218cc9d0c4a0e6121665a6a","inputFileListPaths":[],"inputFilePaths":["${PODS_PODFILE_DIR_PATH}/Podfile.lock","${PODS_ROOT}/Manifest.lock"],"name":"[CP] Check Pods Manifest.lock","originalObjectID":"C38B50BA6285516D6DCD4F65","outputFileListPaths":[],"outputFilePaths":["$(DERIVED_FILE_DIR)/Pods-Sauced-checkManifestLockResult.txt"],"sandboxingOverride":"basedOnBuildSetting","scriptContents":"diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[{"fileReference":"e111a5d8cf296bcd5e88d00de673c5427d9727a0faeea5d48c093ce9689bfdfa","guid":"e111a5d8cf296bcd5e88d00de673c542231f2d0c2befbc4314e854935e41e871"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c542594d24657a64adbd3fc833ee65dea929","guid":"e111a5d8cf296bcd5e88d00de673c5421fd9f1af2b3f1f4e149b5f4a3ebedb80"}],"guid":"e111a5d8cf296bcd5e88d00de673c54229790f8262a1d5c348529b77c65ea1b8","type":"com.apple.buildphase.sources"},{"buildFiles":[{"fileReference":"e111a5d8cf296bcd5e88d00de673c542ca2131abf094966e972e18730ef07945","guid":"e111a5d8cf296bcd5e88d00de673c5426ed2d7aaf4b3e3f701e3d50590a14a78"}],"guid":"e111a5d8cf296bcd5e88d00de673c54267db448fb6beb4f77960c855c856e0dc","type":"com.apple.buildphase.frameworks"},{"buildFiles":[{"fileReference":"e111a5d8cf296bcd5e88d00de673c5428248730f34ef23cd1b8010a7bc53fb39","guid":"e111a5d8cf296bcd5e88d00de673c542925d33dbd384bbd109ca87e66eb9ab64"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c5424aaee7cf1e0bbe6a7e230506df0e55b6","guid":"e111a5d8cf296bcd5e88d00de673c5426f62f52dc3c3f23c6692944d09442d59"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c5425e56c3b2f9bd6e4b305f10f31dd1944e","guid":"e111a5d8cf296bcd5e88d00de673c5428c95cc76b0f8b5b10a5ba40eee6015a0"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c54201f9d0988b1d6d5f59702b68be01a462","guid":"e111a5d8cf296bcd5e88d00de673c542e1ebc2bd404d6d5c89658dfb0a30ad3c"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c542a7cd7f7b3a9ac76ac4bdc8da1336a676","guid":"e111a5d8cf296bcd5e88d00de673c542c5448e12af5eddf5b8b81485dff6a370"},{"fileReference":"e111a5d8cf296bcd5e88d00de673c542fbd6cfae4c374ae044ee8c269d0a1ce7","guid":"e111a5d8cf296bcd5e88d00de673c542957c78a74ad4b8c25e96479bcb5198e0"}],"guid":"e111a5d8cf296bcd5e88d00de673c5427257aa460125423b2ea327be6b0308a7","type":"com.apple.buildphase.resources"},{"alwaysOutOfDate":"false","alwaysRunForInstallHdrs":"false","buildFiles":[],"emitEnvironment":"true","guid":"e111a5d8cf296bcd5e88d00de673c542746ed6f7c998a4a49111f31206ee22e5","inputFileListPaths":[],"inputFilePaths":["$(SRCROOT)/.xcode.env.local","$(SRCROOT)/.xcode.env"],"name":"Bundle React Native code and images","originalObjectID":"00DD1BFF1BD5951E006B06BC","outputFileListPaths":[],"outputFilePaths":[],"sandboxingOverride":"basedOnBuildSetting","scriptContents":"set -e\n\nWITH_ENVIRONMENT=\"$REACT_NATIVE_PATH/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"$REACT_NATIVE_PATH/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","alwaysRunForInstallHdrs":"false","buildFiles":[],"emitEnvironment":"false","guid":"e111a5d8cf296bcd5e88d00de673c5424d9c5771968003a0b1443f7fc5b01861","inputFileListPaths":["${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-frameworks-${CONFIGURATION}-input-files.xcfilelist"],"inputFilePaths":[],"name":"[CP] Embed Pods Frameworks","originalObjectID":"00EEFC60759A1932668264C0","outputFileListPaths":["${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-frameworks-${CONFIGURATION}-output-files.xcfilelist"],"outputFilePaths":[],"sandboxingOverride":"basedOnBuildSetting","scriptContents":"\"${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-frameworks.sh\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","alwaysRunForInstallHdrs":"false","buildFiles":[],"emitEnvironment":"false","guid":"e111a5d8cf296bcd5e88d00de673c54205e5a6cccf1f931832fc47ecb73c36e9","inputFileListPaths":["${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-resources-${CONFIGURATION}-input-files.xcfilelist"],"inputFilePaths":[],"name":"[CP] Copy Pods Resources","originalObjectID":"E235C05ADACE081382539298","outputFileListPaths":["${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-resources-${CONFIGURATION}-output-files.xcfilelist"],"outputFilePaths":[],"sandboxingOverride":"basedOnBuildSetting","scriptContents":"\"${PODS_ROOT}/Target Support Files/Pods-Sauced/Pods-Sauced-resources.sh\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"alwaysOutOfDate":"false","alwaysRunForInstallHdrs":"false","buildFiles":[],"emitEnvironment":"true","guid":"e111a5d8cf296bcd5e88d00de673c5420bf629a70dcd9e79a82eacecbb6820fa","inputFileListPaths":[],"inputFilePaths":["$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)"],"name":"[CP-User] [RNFB] Core Configuration","originalObjectID":"FC381A3D5DC6F7A45AABE4E2","outputFileListPaths":[],"outputFilePaths":[],"sandboxingOverride":"basedOnBuildSetting","scriptContents":"#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##########################################################################\n##########################################################################\n#\n#  NOTE THAT IF YOU CHANGE THIS FILE YOU MUST RUN pod install AFTERWARDS\n#\n#  This file is installed as an Xcode build script in the project file\n#  by cocoapods, and you will not see your changes until you pod install\n#\n##########################################################################\n##########################################################################\n\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | /usr/bin/head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    if ! python3 --version >/dev/null 2>&1; then echo \"python3 not found, firebase.json file processing error.\" && exit 1; fi\n    _JSON_OUTPUT_BASE64=$(python3 -c 'import json,sys,base64;print(base64.b64encode(bytes(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"', '\"'rb'\"').read())['${_JSON_ROOT}']), '\"'utf-8'\"')).decode())' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.app_data_collection_default_enabled\n  _APP_DATA_COLLECTION_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_data_collection_default_enabled\")\n  if [[ $_APP_DATA_COLLECTION_ENABLED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseDataCollectionDefaultEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_DATA_COLLECTION_ENABLED\")\")\n  fi\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.analytics_collection_deactivated\n  _ANALYTICS_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_collection_deactivated\")\n  if [[ $_ANALYTICS_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_DEACTIVATED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_DEACTIVATED\")\")\n  fi\n\n  # config.analytics_idfv_collection_enabled\n  _ANALYTICS_IDFV_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_idfv_collection_enabled\")\n  if [[ $_ANALYTICS_IDFV_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_IDFV_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_IDFV_COLLECTION\")\")\n  fi\n\n  # config.analytics_default_allow_analytics_storage\n  _ANALYTICS_STORAGE=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_analytics_storage\")\n  if [[ $_ANALYTICS_STORAGE ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_ANALYTICS_STORAGE\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_STORAGE\")\")\n  fi\n\n  # config.analytics_default_allow_ad_storage\n  _ANALYTICS_AD_STORAGE=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_storage\")\n  if [[ $_ANALYTICS_AD_STORAGE ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_STORAGE\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AD_STORAGE\")\")\n  fi\n\n  # config.analytics_default_allow_ad_user_data\n  _ANALYTICS_AD_USER_DATA=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_user_data\")\n  if [[ $_ANALYTICS_AD_USER_DATA ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_USER_DATA\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AD_USER_DATA\")\")\n  fi\n\n  # config.analytics_default_allow_ad_personalization_signals\n  _ANALYTICS_PERSONALIZATION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_personalization_signals\")\n  if [[ $_ANALYTICS_PERSONALIZATION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_PERSONALIZATION_SIGNALS\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_PERSONALIZATION\")\")\n  fi\n\n  # config.analytics_registration_with_ad_network_enabled\n  _ANALYTICS_REGISTRATION_WITH_AD_NETWORK=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_registration_with_ad_network_enabled\")\n  if [[ $_ANALYTICS_REGISTRATION_WITH_AD_NETWORK ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_REGISTRATION_WITH_AD_NETWORK_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_REGISTRATION_WITH_AD_NETWORK\")\")\n  fi\n\n  # config.google_analytics_automatic_screen_reporting_enabled\n  _ANALYTICS_AUTO_SCREEN_REPORTING=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_automatic_screen_reporting_enabled\")\n  if [[ $_ANALYTICS_AUTO_SCREEN_REPORTING ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAutomaticScreenReportingEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_SCREEN_REPORTING\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_collection_deactivated\n  _PERF_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_collection_deactivated\")\n  if [[ $_PERF_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_deactivated\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_DEACTIVATED\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.in_app_messaging_auto_colllection_enabled\n  _FIAM_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"in_app_messaging_auto_collection_enabled\")\n  if [[ $_FIAM_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseInAppMessagingAutomaticDataCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_FIAM_AUTO_INIT\")\")\n  fi\n\n  # config.app_check_token_auto_refresh\n  _APP_CHECK_TOKEN_AUTO_REFRESH=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_check_token_auto_refresh\")\n  if [[ $_APP_CHECK_TOKEN_AUTO_REFRESH ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAppCheckTokenAutoRefreshEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_CHECK_TOKEN_AUTO_REFRESH\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"}],"buildRules":[],"dependencies":[],"guid":"e111a5d8cf296bcd5e88d00de673c5427ceb6b36bcfc2fb90f69ac96de4975d6","name":"Sauced","predominantSourceCodeLanguage":"Xcode.SourceCodeLanguage.Objective-C-Plus-Plus","productReference":{"guid":"e111a5d8cf296bcd5e88d00de673c5424f47f80af1468e62de75f083b8820a77","name":"Sauced.app","type":"product"},"productTypeIdentifier":"com.apple.product-type.application","provisioningSourceData":[{"bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Debug","provisioningStyle":1},{"bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Release","provisioningStyle":1}],"type":"standard"}